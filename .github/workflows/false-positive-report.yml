name: false positive ops

on:
  issues:
    types: [opened, edited, reopened]

jobs:
  issue:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'FP Report') 
    steps:
      - name: Remove Labels
        if: contains(github.event.issue.labels.*.name, 'pending more information')
        uses: actions/github-script@v6
        with:
          script: |
              github.rest.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'pending more information'
              })
      - uses: actions/checkout@v2
        with:
          path: odc
      - name: Parse False Positive Issue
        uses: stefanbuck/github-issue-parser@v2
        id: issue-parser
        with:
          template-path: odc/.github/ISSUE_TEMPLATE/false-positive-report.yml
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Initialize npm
        run: |
          npm init -y
          npm install packageurl-js
      - name: Parse Package URL
        id: purl-parser
        uses: actions/github-script@v6
        with:
          script: |
            try {
                const { PackageURL } = require('packageurl-js');
                const pkg = PackageURL.fromString('${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}');
                console.log(pkg);
                return pkg;
            } catch (ex) {
              console.log(ex);
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Error parsing package url: ' + ex + '\n\nPlease correct the package URL'
              })
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['pending more information']
              })
              throw new Error('Invalid package url');
            }
      - name: Setup Maven FP Project
        if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
        run: |
          ver=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
          mkdir ./fp-project
          cp ${{github.workspace}}/odc/.github/workflows/files/maven-pom.start ./fp-project/pom.xml
          echo -n $ver >> ./fp-project/pom.xml
          cat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.middle >> ./fp-project/pom.xml
          echo "<dependency>" >> ./fp-project/pom.xml
          echo "   <groupId>${{ fromJSON(steps.purl-parser.outputs.result).namespace }}</groupId>" >> ./fp-project/pom.xml
          echo "   <artifactId>${{ fromJSON(steps.purl-parser.outputs.result).name }}</artifactId>" >> ./fp-project/pom.xml
          echo "   <version>${{ fromJSON(steps.purl-parser.outputs.result).version }}</version>" >> ./fp-project/pom.xml
          echo "</dependency>" >> ./fp-project/pom.xml
          cat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.end >> ./fp-project/pom.xml
          cd ./fp-project
          ## not ideal as verify would be better then using the docker image...
          ##mvn verify
          mvn dependency:copy-dependencies
      - name: Setup npm FP Project
        if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
        run: |
          mkdir ./fp-project
          cd ./fp-project
          npm init -y
          npm install ${{ fromJSON(steps.purl-parser.outputs.result).name }}@${{ fromJSON(steps.purl-parser.outputs.result).version }}
      - name: Run ODC
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'fp-test'
          path: './fp-project'
          format: 'HTML'  
          args: >
            --failOnCVSS 11
      - name: Upload FP Report
        uses: actions/upload-artifact@master
        with:
           name: FP Report
           path: ${{github.workspace}}/reports
      - name: Maven FP Comment
        if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
        uses: actions/github-script@v6
        with:
          script: |
            var namespace = '${{ fromJSON(steps.purl-parser.outputs.result).namespace }}';
            var name = '${{ fromJSON(steps.purl-parser.outputs.result).name }}';
            var packageType = '${{ fromJSON(steps.purl-parser.outputs.result).type }}';
            var purl = '^pkg:' + packageType;
            if(namespace !== null && namespace !== '') {
                purl += '/' + namespace.replaceAll('.','\\.');
            }
            if(name !== null && name !== '') {
                purl += '/' + name.replaceAll('.','\\.');
            }
            purl += '@.*$';
            var cpe = '${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}'.split(':');
            var matchCpe;
            if (cpe[1] == '2.3') {
               matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];
            } else {
               matchcpe = 'cpe:/a:' + cpe[1] + ':' + cpe[2];
            }
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Maven Coordinates\n\n```xml\n<dependency>\n   <groupId>${{ fromJSON(steps.purl-parser.outputs.result).namespace  }}</groupId>\n   <artifactId>${{ fromJSON(steps.purl-parser.outputs.result).name }}</artifactId>\n   <version>${{ fromJSON(steps.purl-parser.outputs.result).version }}</version>\n</dependency>\n```\n\n' +
                    'Suppression rule:\n```xml\n' +
                    '<suppress base="true">\n' +
                    '   <notes><![CDATA[\n' +
                    '   FP per issue #' + context.issue.number + '\n' +
                    '   ]]></notes>\n' +
                    '   <packageUrl regex="true">' + purl + '</packageUrl>\n' +
                    '   <cpe>' + matchcpe + '</cpe>\n' +
                    '</suppress>\n```\n\n' +
                    'Link to test results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
      - name: Npm FP Comment
        if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
        uses: actions/github-script@v6
        with:
          script: |
            var name = '${{ fromJSON(steps.purl-parser.outputs.result).name }}';
            var packageType = '${{ fromJSON(steps.purl-parser.outputs.result).type }}';
            var purl = '^pkg:' + packageType;
            if(name !== null && name !== '') {
                purl += '/' + name.replaceAll('.','\\.');
            }
            purl += '@.*$';
            var cpe = '${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}'.split(':');
            var matchCpe;
            if (cpe[1] == '2.3') {
               matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];
            } else {
               matchcpe = 'cpe:/a:' + cpe[1] + ':' + cpe[2];
            }
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Npm Coordinates\n\n```shell\npm -i ${{ fromJSON(steps.purl-parser.outputs.result).name }}@${{ fromJSON(steps.purl-parser.outputs.result).version }}\n```\n\n' +
                    'Suppression rule:\n```xml\n' +
                    '<suppress base="true">\n' +
                    '   <notes><![CDATA[\n' +
                    '   FP per issue #' + context.issue.number + '\n' +
                    '   ]]></notes>\n' +
                    '   <packageUrl regex="true">' + purl + '</packageUrl>\n' +
                    '   <cpe>' + matchcpe + '</cpe>\n' +
                    '</suppress>\n```\n\n' +
                    'Link to test results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
      - name: Nuget FP
        if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
        run: echo "nuget"
        
      - name: issue context
        run: |
          echo "---------------------"
          echo "---------------------"
          echo '${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}'
          echo "---------------------"
          echo '${{ fromJSON(steps.purl-parser.outputs.result).type  }}'
          echo "---------------------"
          echo '${{ steps.purl-parser.outputs.result  }}'
          echo "---------------------"
          echo '${{ github.run_id }}'
          echo '${{ github.run_number }}'
          echo '${{ github.run_attempt }}'
          echo '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
